---
import type { HTMLAttributes } from 'astro/types'
import { Calendar, Download, UserPen } from 'lucide'

let icons = {
  Calendar,
  Download,
  UserPen,
}

interface Props extends Omit<HTMLAttributes<'svg'>, 'width' | 'height'> {
  icon: keyof typeof icons
  size?: number | string
  color?: string
}

let { icon, size = '1em', color, ...svgProps } = Astro.props
if (!(icon in icons)) {
  throw new Error(`${icon} not in: ${Object.keys(icons).join(', ')}`)
}

let childrenHtml = icons[icon]
  .map(
    ([tag, attr]) =>
      `<${tag} ${Object.entries(attr)
        .map(([k, v]) => `${k}="${v}"`)
        .join(' ')} />`,
  )
  .join('\n')
---

<svg
  viewBox="0 0 24 24"
  fill="none"
  stroke={color || 'currentColor'}
  stroke-width="2"
  stroke-linecap="round"
  stroke-linejoin="round"
  width={size}
  height={size}
  {...svgProps}
  set:html={childrenHtml}
/>
