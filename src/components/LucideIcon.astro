---
import type { HTMLAttributes } from 'astro/types'
import { Calendar, Download, UserPen } from 'lucide'

let icons = {
  Calendar,
  Download,
  UserPen,
}

interface Props extends Omit<HTMLAttributes<'svg'>, 'width' | 'height'> {
  icon: keyof typeof icons
  size?: number | string
  color?: string
}

let { icon, size = '1rem', color, ...rest } = Astro.props
if (!(icon in icons)) {
  throw new Error(`${icon} not in: ${Object.keys(icons).join(', ')}`)
}

let [, attributesData, childrenData = []] = icons[icon]

let attributes = {
  ...rest,
  ...attributesData,
  ...{ width: size, height: size },
  ...(color ? { stroke: color } : null),
}
let childrenHtml = childrenData
  .map(
    ([tag, attr]) =>
      `<${tag} ${Object.entries(attr)
        .map(([k, v]) => `${k}="${v}"`)
        .join(' ')} />`,
  )
  .join('\n')
---

<svg {...attributes} set:html={childrenHtml} />
